/* Fill-in information from Blynk Device Info here */
#define BLYNK_TEMPLATE_ID           "TMPLwiCxnErz"
#define BLYNK_TEMPLATE_NAME         "Quickstart Device"
#define BLYNK_AUTH_TOKEN            "4yr1nN_1MDbgXAKnUK-k6TWk5Y5hf8se"
#define BLYNK_PRINT Serial
#define RELAY1_PIN D1 //pump1
#define RELAY2_PIN D7 //pump2
#define LDR_PIN A0 //ldr
#define VIRTUAL_PIN V4 //ldr
#define trigPin D5 //ultra
#define echoPin D6 //ultra
int distanceToBottom = 10; // distance between sensor and bottom of container in cm
int containerHeight = 50; // height of container in cm

#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <SoftwareSerial.h>
SoftwareSerial NodeMCU(D2, D3); // Configuring a serial connection with these pins (RX, TX)
char auth[] = "4yr1nN_1MDbgXAKnUK-k6TWk5Y5hf8se"; // Insert your own Blynk authentication token
String content; // Variable that gets serial data
// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "Harsh";
char pass[] = "Harsh99871590";
BlynkTimer timer; // Creating a timer object

void sendValues() 
{
  char c;
  content = NodeMCU.readString(); // Reading serial data
  Serial.println(content); // I used this line to check if data is correct
  // This is where I process the data
  /* In Arduino code, you can see that data is sent as one string
  which contains every value so we get those values for each sensor
  like this */
  String v1 = content.substring(0, 2);
  String v2 = content.substring(2, 4);

  if(v1 == "aa")v1 = "100";
  if(v2 == "aa")v1 = "100";

  // Making it prettier
  String str1 = v1 + " %";
  String str2 = v2 + " %";
  
  // Sending processed data to server and writing them to virtual pins
  Blynk.virtualWrite(V0, str1);
  Blynk.virtualWrite(V1, str2);

}
// Marker                                                                                                                          
void setup()
{
  Serial.begin(19200); // Starting serial connection for debugging and checking
  Blynk.begin(auth, ssid, pass); // Starting a connection with Blynk's server
  delay(500); // Adding a little delay so that we can connect properly
  timer.setInterval(1000L, sendValues); // Timer will start the "sendValues" function every second
  NodeMCU.begin(9600); // Starting a serial communication with Arduino
  pinMode(D2,INPUT); // Pin used as recieve (RX) pin
  pinMode(D3,OUTPUT); // Pin used as transmit (TX) pin
  pinMode(RELAY1_PIN, OUTPUT); //pump1
  pinMode(RELAY2_PIN, OUTPUT); //pump2
  pinMode(LDR_PIN, INPUT); //ldr
  pinMode(trigPin, OUTPUT); //ultra
  pinMode(echoPin, INPUT); //ultra
  digitalWrite(RELAY1_PIN, HIGH);
  digitalWrite(RELAY2_PIN, HIGH);
}

void loop()
{
  Blynk.run(); //Initiates Blynk
  timer.run(); //Initiates Timer
  int ldrValue = analogRead(LDR_PIN);
  Blynk.virtualWrite(VIRTUAL_PIN, ldrValue);
  delay(1000);
  
  if (ldrValue > 1000 ) {  //ldr notification

    Blynk.logEvent("ldr", "LDR value exceeded threshold");
  }

  long duration, distance;      //ul
  digitalWrite(trigPin, LOW);   //ul
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = (duration / 2) / 29.1;

  if (distance >= 2 && distance <= 400) {
    int waterLevelHeight = distance - distanceToBottom;
    float waterLevelPercent = (float)(waterLevelHeight) / containerHeight * 100;
    Serial.print("Water Level: ");
    Serial.print(waterLevelPercent);
    Serial.println("%");
    Blynk.virtualWrite(V5, waterLevelPercent);
  }
}


BLYNK_WRITE(V2) {     //pump1
  int state = param.asInt();
  digitalWrite(RELAY1_PIN, !state);
}

BLYNK_WRITE(V3) {     //pump2
  int state = param.asInt();
  digitalWrite(RELAY2_PIN, !state);
}
